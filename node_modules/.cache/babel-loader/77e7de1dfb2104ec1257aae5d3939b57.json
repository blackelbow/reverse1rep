{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CJ's Ultra Machine\\\\Desktop\\\\reverseonerep\\\\src\\\\components\\\\CalculatorView.js\";\nimport React, { Component } from 'react';\n/*\r\nfunction calculate () {\r\n    var max=document.getElementById(\"oneRM\")\r\n    var weight=document.getElementById(\"goalWeight\")\r\n    var reps=document.getElementById(\"goalReps\")\r\n\r\n    if (max.value>0 && weight.value>0 && !reps.value>0) {\r\n        console.log(\r\n            Math.round(((max.value-weight.value)/3)+1)\r\n        )\r\n    }\r\n    else if (max.value>0 && reps.value>0 && !weight.value>0) {\r\n        console.log(\r\n            Math.round(max.value-((reps.value-1)*3))\r\n    )\r\n    }\r\n    else {\r\n        alert (\"Unable to calculate. Please enter One Rep Max and EITHER Goal Reps or Goal Weight BUT not both\")\r\n    }\r\n\r\n}\r\n*/\n\nclass CalculatorView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props.state; //this.handleClick = this.handleClick.bind(this)\n  }\n\n  render() {\n    var inputStyle = {\n      position: 'sticky',\n      width: '50%',\n      textAlign: 'center',\n      justifyContent: 'center',\n      height: '10rem',\n      marginBottom: '25rem',\n      marginTop: '5rem',\n      paddingBottom: '5rem'\n    };\n    return;\n\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, props.visible ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: inputStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"oneRM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Enter One Rep Max (Lbs)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"oneRM\",\n      min: \"1\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"THEN\"), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"goalWeight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Enter Goal Weight\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"goalWeight\",\n      min: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"OR\"), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"goalReps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"Enter Goal Reps\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"goalReps\",\n      min: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button-large\",\n      onClick: this.props.calculate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Calculate\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }));\n  }\n\n}\n\nexport default CalculatorView;","map":{"version":3,"sources":["C:/Users/CJ's Ultra Machine/Desktop/reverseonerep/src/components/CalculatorView.js"],"names":["React","Component","CalculatorView","constructor","props","state","render","inputStyle","position","width","textAlign","justifyContent","height","marginBottom","marginTop","paddingBottom","visible","calculate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACnCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKD,KAAL,CAAWC,KAAxB,CAFe,CAGf;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAET,QAAIC,UAAU,GAAG;AACbC,MAAAA,QAAQ,EAAE,QADG;AAEbC,MAAAA,KAAK,EAAE,KAFM;AAGbC,MAAAA,SAAS,EAAE,QAHE;AAIbC,MAAAA,cAAc,EAAE,QAJH;AAKbC,MAAAA,MAAM,EAAE,OALK;AAMbC,MAAAA,YAAY,EAAE,OAND;AAObC,MAAAA,SAAS,EAAE,MAPE;AAQbC,MAAAA,aAAa,EAAE;AARF,KAAjB;AAYA;;AACA;AACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACUX,KAAK,CAACY,OAAN,gBACD;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAET,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,OAAxB;AAAgC,MAAA,GAAG,EAAC,GAApC;AAAwC,MAAA,QAAQ,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,MAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ,eAKI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,YAAxB;AAAqC,MAAA,GAAG,EAAC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPJ,eAQI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,UAAxB;AAAmC,MAAA,GAAG,EAAC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ,CAFC,eAeD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWa,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfC,CADC,gBAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBV,CADJ;AA0BC;;AAhDkC;;AAmDvC,eAAef,cAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\n/*\r\nfunction calculate () {\r\n    var max=document.getElementById(\"oneRM\")\r\n    var weight=document.getElementById(\"goalWeight\")\r\n    var reps=document.getElementById(\"goalReps\")\r\n\r\n    if (max.value>0 && weight.value>0 && !reps.value>0) {\r\n        console.log(\r\n            Math.round(((max.value-weight.value)/3)+1)\r\n        )\r\n    }\r\n    else if (max.value>0 && reps.value>0 && !weight.value>0) {\r\n        console.log(\r\n            Math.round(max.value-((reps.value-1)*3))\r\n    )\r\n    }\r\n    else {\r\n        alert (\"Unable to calculate. Please enter One Rep Max and EITHER Goal Reps or Goal Weight BUT not both\")\r\n    }\r\n\r\n}\r\n*/\r\nclass CalculatorView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.props.state;\r\n        //this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    render() {\r\n\r\n    var inputStyle = {\r\n        position: 'sticky',\r\n        width: '50%',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        height: '10rem',\r\n        marginBottom: '25rem', \r\n        marginTop: '5rem',\r\n        paddingBottom: '5rem'\r\n        \r\n    }\r\n\r\n    return \r\n    ( \r\n        <div>\r\n                { props.visible\r\n                ?<div className=\"container\" style={inputStyle}>\r\n\r\n                <form>\r\n                    <fieldset>\r\n                        <label for=\"oneRM\">Enter One Rep Max (Lbs)</label>\r\n                        <input type=\"number\" id=\"oneRM\" min=\"1\" required></input>\r\n                        <p>THEN</p>\r\n                        <label for=\"goalWeight\">Enter Goal Weight</label>\r\n                        <input type=\"number\" id=\"goalWeight\" min=\"1\"></input>\r\n                        <p>OR</p>\r\n                        <label for=\"goalReps\">Enter Goal Reps</label>\r\n                        <input type=\"number\" id=\"goalReps\" min=\"1\"></input>\r\n                    </fieldset>\r\n                </form>\r\n\r\n                <button class=\"button-large\" onClick={this.props.calculate}>Calculate</button>\r\n\r\n                </div>\r\n                : <div></div>\r\n                }\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default CalculatorView;"]},"metadata":{},"sourceType":"module"}