{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CJ's Ultra Machine\\\\Desktop\\\\reverseonerep\\\\src\\\\components\\\\CalculatorView.js\";\nimport React from 'react';\n/*\r\nfunction calculate () {\r\n    var max=document.getElementById(\"oneRM\")\r\n    var weight=document.getElementById(\"goalWeight\")\r\n    var reps=document.getElementById(\"goalReps\")\r\n\r\n    if (max.value>0 && weight.value>0 && !reps.value>0) {\r\n        console.log(\r\n            Math.round(((max.value-weight.value)/3)+1)\r\n        )\r\n    }\r\n    else if (max.value>0 && reps.value>0 && !weight.value>0) {\r\n        console.log(\r\n            Math.round(max.value-((reps.value-1)*3))\r\n    )\r\n    }\r\n    else {\r\n        alert (\"Unable to calculate. Please enter One Rep Max and EITHER Goal Reps or Goal Weight BUT not both\")\r\n    }\r\n\r\n}\r\n*/\n\nconst CalculatorView = (props, {\n  calculate\n}) => {\n  var inputStyle = {\n    position: 'sticky',\n    width: '50%',\n    textAlign: 'center',\n    justifyContent: 'center',\n    height: '10rem',\n    marginBottom: '25rem',\n    marginTop: '5rem',\n    paddingBottom: '5rem'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, props.visible ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: inputStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"oneRM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"Enter One Rep Max (Lbs)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"oneRM\",\n    min: \"1\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"THEN\"), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"goalWeight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Enter Goal Weight\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"goalWeight\",\n    min: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"goalReps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"Enter Goal Reps\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"goalReps\",\n    min: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button-large\",\n    onClick: calculate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Calculate\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }));\n};\n\nexport default CalculatorView;","map":{"version":3,"sources":["C:/Users/CJ's Ultra Machine/Desktop/reverseonerep/src/components/CalculatorView.js"],"names":["React","CalculatorView","props","calculate","inputStyle","position","width","textAlign","justifyContent","height","marginBottom","marginTop","paddingBottom","visible"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQ;AAACC,EAAAA;AAAD,CAAR,KAAwB;AAG3C,MAAIC,UAAU,GAAG;AACbC,IAAAA,QAAQ,EAAE,QADG;AAEbC,IAAAA,KAAK,EAAE,KAFM;AAGbC,IAAAA,SAAS,EAAE,QAHE;AAIbC,IAAAA,cAAc,EAAE,QAJH;AAKbC,IAAAA,MAAM,EAAE,OALK;AAMbC,IAAAA,YAAY,EAAE,OAND;AAObC,IAAAA,SAAS,EAAE,MAPE;AAQbC,IAAAA,aAAa,EAAE;AARF,GAAjB;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACUV,KAAK,CAACW,OAAN,gBACD;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAET,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,EAAE,EAAC,OAAxB;AAAgC,IAAA,GAAG,EAAC,GAApC;AAAwC,IAAA,QAAQ,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,IAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,eAKI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,EAAE,EAAC,YAAxB;AAAqC,IAAA,GAAG,EAAC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,eAOI;AAAO,IAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPJ,eAQI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,EAAE,EAAC,UAAxB;AAAmC,IAAA,GAAG,EAAC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,CAFC,eAeD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,OAAO,EAAED,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAfC,CADC,gBAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBV,CADJ;AA0BH,CAxCD;;AA0CA,eAAeF,cAAf","sourcesContent":["import React from 'react';\r\n\r\n/*\r\nfunction calculate () {\r\n    var max=document.getElementById(\"oneRM\")\r\n    var weight=document.getElementById(\"goalWeight\")\r\n    var reps=document.getElementById(\"goalReps\")\r\n\r\n    if (max.value>0 && weight.value>0 && !reps.value>0) {\r\n        console.log(\r\n            Math.round(((max.value-weight.value)/3)+1)\r\n        )\r\n    }\r\n    else if (max.value>0 && reps.value>0 && !weight.value>0) {\r\n        console.log(\r\n            Math.round(max.value-((reps.value-1)*3))\r\n    )\r\n    }\r\n    else {\r\n        alert (\"Unable to calculate. Please enter One Rep Max and EITHER Goal Reps or Goal Weight BUT not both\")\r\n    }\r\n\r\n}\r\n*/\r\n\r\nconst CalculatorView = (props, {calculate}) => {\r\n\r\n\r\n    var inputStyle = {\r\n        position: 'sticky',\r\n        width: '50%',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        height: '10rem',\r\n        marginBottom: '25rem', \r\n        marginTop: '5rem',\r\n        paddingBottom: '5rem'\r\n        \r\n    }\r\n    return ( \r\n        <div>\r\n                { props.visible\r\n                ?<div className=\"container\" style={inputStyle}>\r\n\r\n                <form>\r\n                    <fieldset>\r\n                        <label for=\"oneRM\">Enter One Rep Max (Lbs)</label>\r\n                        <input type=\"number\" id=\"oneRM\" min=\"1\" required></input>\r\n                        <p>THEN</p>\r\n                        <label for=\"goalWeight\">Enter Goal Weight</label>\r\n                        <input type=\"number\" id=\"goalWeight\" min=\"1\"></input>\r\n                        <p>OR</p>\r\n                        <label for=\"goalReps\">Enter Goal Reps</label>\r\n                        <input type=\"number\" id=\"goalReps\" min=\"1\"></input>\r\n                    </fieldset>\r\n                </form>\r\n\r\n                <button class=\"button-large\" onClick={calculate}>Calculate</button>\r\n\r\n                </div>\r\n                : <div></div>\r\n                }\r\n            \r\n            </div>\r\n     );\r\n}\r\n \r\nexport default CalculatorView;"]},"metadata":{},"sourceType":"module"}