{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CJ's Ultra Machine\\\\Desktop\\\\reverseonerep\\\\src\\\\components\\\\CalculatorView.js\";\nimport React from 'react';\n\nfunction calculate() {\n  console.log('weight calculated');\n}\n\nconst CalculatorView = props => {\n  var inputStyle = {\n    position: 'sticky',\n    width: '50%',\n    textAlign: 'center',\n    justifyContent: 'center',\n    height: '10rem',\n    marginBottom: '25rem',\n    marginTop: '5rem',\n    paddingBottom: '6rem'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, props.visible ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: inputStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"oneRM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, \"Enter One Rep Max (Lbs)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"oneRM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, \"THEN\"), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"goalWeight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, \"Enter Goal Weight\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"goalNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"goalReps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Enter Goal Reps\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"goalReps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button-large\",\n    onClick: calculate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Calculate\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }));\n};\n\nexport default CalculatorView;\n/*\r\nclass CalculatorView extends Component {\r\n\r\n    render() { \r\n\r\n        const visible = this.props.visible\r\n\r\n        var inputStyle = {\r\n            position: 'sticky',\r\n            width: '50%',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            height: '10rem',\r\n            marginBottom: '25rem', \r\n            marginTop: '5rem',\r\n            paddingBottom: '5rem'\r\n            \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                { visible\r\n                ?<div className=\"container\" style={inputStyle}>\r\n\r\n                <form>\r\n                    <fieldset>\r\n                        <label for=\"oneRM\">Enter One Rep Max (Lbs)</label>\r\n                        <input type=\"number\" id=\"oneRM\"></input>\r\n                        <p>THEN</p>\r\n                        <label for=\"goalWeight\">Enter Goal Weight</label>\r\n                        <input type=\"number\" id=\"goalNumber\"></input>\r\n                        <p>OR</p>\r\n                        <label for=\"goalReps\">Enter Goal Reps</label>\r\n                        <input type=\"number\" id=\"goalReps\"></input>\r\n                    </fieldset>\r\n                </form>\r\n\r\n                <button class=\"button-large\" onClick={calculate}>Calculate</button>\r\n\r\n                </div>\r\n                : <div></div>\r\n                }\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default CalculatorView;\r\n*/","map":{"version":3,"sources":["C:/Users/CJ's Ultra Machine/Desktop/reverseonerep/src/components/CalculatorView.js"],"names":["React","calculate","console","log","CalculatorView","props","inputStyle","position","width","textAlign","justifyContent","height","marginBottom","marginTop","paddingBottom","visible"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,GAAsB;AAACC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAAiC;;AAExD,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAE9B,MAAIC,UAAU,GAAG;AACbC,IAAAA,QAAQ,EAAE,QADG;AAEbC,IAAAA,KAAK,EAAE,KAFM;AAGbC,IAAAA,SAAS,EAAE,QAHE;AAIbC,IAAAA,cAAc,EAAE,QAJH;AAKbC,IAAAA,MAAM,EAAE,OALK;AAMbC,IAAAA,YAAY,EAAE,OAND;AAObC,IAAAA,SAAS,EAAE,MAPE;AAQbC,IAAAA,aAAa,EAAE;AARF,GAAjB;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACUT,KAAK,CAACU,OAAN,gBACD;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAET,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,EAAE,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,IAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,eAKI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,EAAE,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,eAOI;AAAO,IAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPJ,eAQI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,EAAE,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,CAFC,eAeD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,OAAO,EAAEL,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAfC,CADC,gBAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBV,CADJ;AA0BH,CAvCD;;AAyCA,eAAeG,cAAf;AAEA","sourcesContent":["import React from 'react';\r\n\r\nfunction calculate () {console.log('weight calculated')}\r\n\r\nconst CalculatorView = (props) => {\r\n\r\n    var inputStyle = {\r\n        position: 'sticky',\r\n        width: '50%',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        height: '10rem',\r\n        marginBottom: '25rem', \r\n        marginTop: '5rem',\r\n        paddingBottom: '6rem'\r\n        \r\n    }\r\n    return ( \r\n        <div>\r\n                { props.visible\r\n                ?<div className=\"container\" style={inputStyle}>\r\n\r\n                <form>\r\n                    <fieldset>\r\n                        <label for=\"oneRM\">Enter One Rep Max (Lbs)</label>\r\n                        <input type=\"number\" id=\"oneRM\"></input>\r\n                        <p>THEN</p>\r\n                        <label for=\"goalWeight\">Enter Goal Weight</label>\r\n                        <input type=\"number\" id=\"goalNumber\"></input>\r\n                        <p>OR</p>\r\n                        <label for=\"goalReps\">Enter Goal Reps</label>\r\n                        <input type=\"number\" id=\"goalReps\"></input>\r\n                    </fieldset>\r\n                </form>\r\n\r\n                <button class=\"button-large\" onClick={calculate}>Calculate</button>\r\n\r\n                </div>\r\n                : <div></div>\r\n                }\r\n            \r\n            </div>\r\n     );\r\n}\r\n \r\nexport default CalculatorView;\r\n\r\n/*\r\nclass CalculatorView extends Component {\r\n\r\n    render() { \r\n\r\n        const visible = this.props.visible\r\n\r\n        var inputStyle = {\r\n            position: 'sticky',\r\n            width: '50%',\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            height: '10rem',\r\n            marginBottom: '25rem', \r\n            marginTop: '5rem',\r\n            paddingBottom: '5rem'\r\n            \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                { visible\r\n                ?<div className=\"container\" style={inputStyle}>\r\n\r\n                <form>\r\n                    <fieldset>\r\n                        <label for=\"oneRM\">Enter One Rep Max (Lbs)</label>\r\n                        <input type=\"number\" id=\"oneRM\"></input>\r\n                        <p>THEN</p>\r\n                        <label for=\"goalWeight\">Enter Goal Weight</label>\r\n                        <input type=\"number\" id=\"goalNumber\"></input>\r\n                        <p>OR</p>\r\n                        <label for=\"goalReps\">Enter Goal Reps</label>\r\n                        <input type=\"number\" id=\"goalReps\"></input>\r\n                    </fieldset>\r\n                </form>\r\n\r\n                <button class=\"button-large\" onClick={calculate}>Calculate</button>\r\n\r\n                </div>\r\n                : <div></div>\r\n                }\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default CalculatorView;\r\n*/"]},"metadata":{},"sourceType":"module"}