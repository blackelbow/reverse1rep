{"version":3,"sources":["components/Header.js","components/CalculatorView.js","components/DataView.js","components/BottomNav.js","components/CalculationModal.js","components/DataBase.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","style","textAlign","backgroundColor","color","Component","CalculatorView","props","state","this","visible","position","width","justifyContent","height","marginBottom","marginTop","paddingBottom","for","type","id","min","required","class","onClick","calculate","DataView","margin","calcs","map","calc","key","datetime","onerepmax","calculatedreps","goalreps","calculatedweight","goalweight","delete","icon","faTrash","clear","BottomNav","aStyle","fontWeight","paddingLeft","paddingRight","padding","bottom","listStyleType","display","borderRight","href","handleClick","borderLeft","CalculationModal","onClose","hide","animation","measure","result","marginRight","save","db","Dexie","version","stores","calculation","App","calculatorViewVisible","dataViewVisible","modalVisible","bind","show","table","toArray","then","setState","target","max","document","getElementById","weight","reps","value","maxreps","Math","round","maxweight","niceTimeStamp","Date","toDateString","add","componentDidMount","currentTarget","num","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gRAeeA,G,6KAJP,OAAQ,4BAAQC,UAAU,aAAaC,MALrB,CACdC,UAAW,SACXC,gBAAiB,YAGsC,wBAAIF,MAAO,CAACG,MAAM,UAAlB,0B,GAT9CC,cCkDNC,E,kDAhDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,EAAKD,MAAMC,MAFT,E,qDAmBnB,OACI,6BACUC,KAAKF,MAAMG,QACZ,yBAAKV,UAAU,YAAYC,MAfvB,CACbU,SAAU,SACVC,MAAO,MACPV,UAAW,SACXW,eAAgB,SAChBC,OAAQ,QACRC,aAAc,QACdC,UAAW,OACXC,cAAe,SASP,8BACI,kCACI,2BAAOC,IAAI,SAAX,2BACA,2BAAOC,KAAK,SAASC,GAAG,QAAQC,IAAI,IAAIC,UAAQ,IAChD,mCACA,2BAAOJ,IAAI,cAAX,qBACA,2BAAOC,KAAK,SAASC,GAAG,aAAaC,IAAI,MACzC,iCACA,2BAAOH,IAAI,YAAX,mBACA,2BAAOC,KAAK,SAASC,GAAG,WAAWC,IAAI,QAI/C,4BAAQE,MAAM,eAAeC,QAASf,KAAKF,MAAMkB,WAAjD,cAGE,mC,GAzCWpB,a,gBCqEdqB,E,kDAlEf,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,EAAKD,MAAMC,MAFT,E,qDAML,IAAD,OAeT,OACA,6BAEQC,KAAKF,MAAMG,QAEX,6BAEI,wBAAIT,MAAO,CAACC,UAAW,WAAvB,UAEA,2BAAOD,MAtBF,CACbW,MAAO,MACPV,UAAW,SACXW,eAAgB,SAChBc,OAAQ,SAmBI,+BACI,4BACI,oCACA,gDACA,oCACA,sCACA,wCAGR,+BAEMlB,KAAKF,MAAMqB,MAAMC,KAAI,SAACC,GAAD,OAEnB,wBAAIC,IAAKD,EAAKV,IACV,4BAAKU,EAAKE,SAAV,KACA,4BAAKF,EAAKG,UAAV,KACA,4BAAKH,EAAKI,eAAgBJ,EAAKK,UAC/B,4BAAKL,EAAKM,iBAAkBN,EAAKO,YACjC,wBAAIjB,GAAIU,EAAKV,GAAII,QAAS,EAAKjB,MAAM+B,QAAQ,kBAAC,IAAD,CAAiBC,KAAMC,aAKpF,yBAAKxC,UAAU,YAAYC,MAvCjB,CAClBC,UAAW,SACXW,eAAgB,SAChBE,aAAc,SAqCN,4BAAQQ,MAAM,eAAeC,QAASf,KAAKF,MAAMkC,OAAjD,gBAGH,mC,GA3DUpC,aC4DRqC,E,kDA9DX,WAAYnC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,EAAKD,MAAMC,MAFT,E,qDAQf,IAiCImC,EAAS,CACTvC,MAAO,OACPwC,WAAY,OACZ9B,OAAQ,OACRF,MAAO,OACPiC,YAAa,MACbC,aAAc,MACd7B,cAAe,OAGnB,OACI,yBAAKjB,UAAU,YAAYC,MA5CV,CACjB0B,OAAQ,IACRX,UAAW,MACX+B,QAAS,IACTpC,SAAU,QACVC,MAAO,OACPoC,OAAQ,IACR7C,gBAAiB,YAsCb,wBAAIF,MAnCE,CACVgD,cAAe,OACfrC,MAAO,OACPV,UAAW,SACXY,OAAQ,SAgCA,wBAAIb,MA7BD,CACXiD,QAAS,SACTtC,MAAO,MACPE,OAAQ,OACRqC,YAAa,iBACbjD,UAAW,WAwBkB,uBAAGD,MAAO0C,EAAQS,KAAK,cAAchC,GAAG,aAAaI,QAASf,KAAKF,MAAM8C,aAAzE,eACrB,wBAAIpD,MAtBD,CACXiD,QAAS,SACTtC,MAAO,MACP0C,WAAY,iBACZxC,OAAQ,OACRZ,UAAW,WAiBkB,uBAAGD,MAAO0C,EAAQS,KAAK,QAAQhC,GAAG,OAAOI,QAASf,KAAKF,MAAM8C,aAA7D,kB,GAxDjBhD,a,QCkDTkD,G,wDA9CX,WAAYhD,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAM,EAAKD,MAAMC,MAFP,E,qDAkBf,OACA,6BAEQC,KAAKF,MAAMG,QACT,6BACE,kBAAC,IAAD,CACIA,QAASD,KAAKF,MAAMG,QACpB8C,QAAS/C,KAAKF,MAAMkD,KACpBC,UAAWjD,KAAKF,MAAMmD,UACtB9C,MAAOH,KAAKF,MAAMK,MAClBE,OAAQL,KAAKF,MAAMO,OACnB6C,QAASlD,KAAKF,MAAMoD,SAExB,yBAAK1D,MAvBF,CACXC,UAAW,SACXW,eAAgB,WAsBJ,uCAAgB,6BAChB,wBAAIO,GAAG,eAAeX,KAAKF,MAAMqD,QAAY,6BACzC,4BAAQpC,QAASf,KAAKF,MAAMkD,KAAMxD,MApBpC,CACd4D,YAAa,OAmBG,SACA,4BAAQrC,QAASf,KAAKF,MAAMuD,MAA5B,WAIV,mC,GAxCazD,cCHzB0D,EAAK,I,MAAIC,GAAM,iBACrBD,EAAGE,QAAQ,GAAGC,OACV,CAAEC,YAAa,sFAGJJ,QCqLAK,E,kDAhLb,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX6D,uBAAuB,EACvBC,iBAAiB,EACjBC,cAAc,EACdX,OAAQ,GACRhC,MAAO,GACP8B,UAAW,OACX9C,MAAO,GACPE,OAAQ,GACR6C,QAAQ,OAET,EAAKN,YAAc,EAAKA,YAAYmB,KAAjB,gBACnB,EAAK/C,UAAY,EAAKA,UAAU+C,KAAf,gBACjB,EAAKC,KAAO,EAAKA,KAAKD,KAAV,gBACZ,EAAKf,KAAO,EAAKA,KAAKe,KAAV,gBACZ,EAAKV,KAAO,EAAKA,KAAKU,KAAV,gBACZ,EAAKlC,OAAS,EAAKA,OAAOkC,KAAZ,gBACd,EAAK/B,MAAQ,EAAKA,MAAM+B,KAAX,gBAnBG,E,gEAsBE,IAAD,OAClBT,EAAGW,MAAM,eACNC,UACAC,MAAK,SAAChD,GACL,EAAKiD,SAAS,CAAEjD,e,kCAIVR,GACV,OAAQA,EAAG0D,OAAO1D,IAChB,IAAK,aACHX,KAAKoE,SACH,CACER,uBAAuB,EACvBC,iBAAiB,EACjBC,cAAc,IAGlB,MACF,IAAK,OACH9D,KAAKoE,SACH,CACER,uBAAuB,EACvBC,iBAAiB,EACjBC,cAAc,IAGlB,MACF,QACA9D,KAAKoE,SACH,CACER,uBAAuB,EACvBC,iBAAiB,EACjBC,cAAc,O,kCASpB,IAAIQ,EAAIC,SAASC,eAAe,SAC5BC,EAAOF,SAASC,eAAe,cAC/BE,EAAKH,SAASC,eAAe,YAEjC,GAAIF,EAAIK,MAAM,GAAKF,EAAOE,MAAM,IAAMD,EAAKC,MAAM,EAAG,CAChD,IAAIC,EAAUC,KAAKC,OAAQR,EAAIK,MAAMF,EAAOE,OAAO,EAAG,GACtD3E,KAAKoE,SAAU,CAACjB,OAAQyB,EAASd,cAAc,SAE9C,GAAIQ,EAAIK,MAAM,GAAKD,EAAKC,MAAM,IAAMF,EAAOE,MAAM,EAAG,CACrD,IAAII,EAAYF,KAAKC,MAAMR,EAAIK,MAAOL,EAAIK,OAAsB,KAAdD,EAAKC,MAAM,KAC7D3E,KAAKoE,SAAU,CAACjB,OAAQ4B,EAAWjB,cAAc,QAEhD,CAED9D,KAAKoE,SAAU,CAACjB,OADF,0BACmBW,cAAc,O,6BAMnD9D,KAAKoE,SAAS,CAAEnE,SAAS,M,6BAIzBD,KAAKoE,SAAS,CAAEN,cAAc,M,6BAI9B,IAAIQ,EAAIC,SAASC,eAAe,SAC5BC,EAAOF,SAASC,eAAe,cAC/BE,EAAKH,SAASC,eAAe,YAE7BQ,GADY,IAAIC,MACUC,eAE1BZ,EAAIK,MAAM,GAAKF,EAAOE,MAAM,IAAMD,EAAKC,MAAM,GAChDrB,EAAGI,YAAYyB,IAAI,CAChB5D,SAAUyD,EACVxD,UAAW8C,EAAIK,MACfjD,SAAUgD,EAAKC,MACf/C,WAAY6C,EAAOE,MACnBlD,eAAgBzB,KAAKD,MAAMoD,OAC3BxB,iBAAkB,OAEpB3B,KAAKoF,oBAELpF,KAAKoE,SAAS,CAACP,iBAAiB,EAAMD,uBAAuB,EAAOE,cAAc,KAE3EQ,EAAIK,MAAM,GAAKD,EAAKC,MAAM,IAAMF,EAAOE,MAAM,GACpDrB,EAAGI,YAAYyB,IAAI,CACjB5D,SAAUyD,EACVxD,UAAW8C,EAAIK,MACfjD,SAAUgD,EAAKC,MACf/C,WAAY6C,EAAOE,MACnBlD,eAAgB,KAChBE,iBAAkB3B,KAAKD,MAAMoD,SAE/BnD,KAAKoF,oBACLpF,KAAKoE,SAAS,CAACP,iBAAiB,EAAMD,uBAAuB,EAAOE,cAAc,KAE9E9D,KAAKoE,SAAS,CAACP,iBAAiB,EAAOD,uBAAuB,EAAME,cAAc,M,gCAGhE,IAAjBuB,EAAgB,EAAhBA,cACHC,EAAMC,SAASF,EAAc1E,IACjC2C,EAAGI,YAAY7B,OAAOyD,GACtBtF,KAAKoE,SAAS,CAACP,iBAAiB,EAAMD,uBAAuB,EAAOE,cAAc,IAClF9D,KAAKoF,sB,8BAIL9B,EAAGI,YAAY1B,QACfhC,KAAKoE,SAAS,CAACP,iBAAiB,EAAMD,uBAAuB,EAAOE,cAAc,IAClF9D,KAAKoF,sB,+BAKP,OAEE,yBAAK7F,UAAU,OAEb,kBAAC,EAAD,MAEA,kBAAC,EAAD,CACEU,QAASD,KAAKD,MAAM6D,sBACpB5C,UAAWhB,KAAKgB,UAChBgD,KAAMhE,KAAKgE,OAEb,kBAAC,EAAD,CACE/D,QAASD,KAAKD,MAAM8D,gBACpB1C,MAAOnB,KAAKD,MAAMoB,MAClBU,OAAQ7B,KAAK6B,OACbG,MAAOhC,KAAKgC,QAEd,kBAAC,EAAD,CACE/B,QAASD,KAAKD,MAAM+D,aACpBX,OAAQnD,KAAKD,MAAMoD,OACnBF,UAAWjD,KAAKD,MAAMkD,UACtB9C,MAAOH,KAAKD,MAAMI,MAClBE,OAAQL,KAAKD,MAAMM,OACnB6C,QAASlD,KAAKD,MAAMmD,QACpBF,KAAMhD,KAAKgD,KACXK,KAAMrD,KAAKqD,OAEb,kBAAC,EAAD,CACET,YAAa5C,KAAK4C,mB,GA3KRhD,aCEE4F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxB,SAASC,eAAe,SDyHpB,kBAAmBwB,WACrBA,UAAUC,cAAcC,MACrB/B,MAAK,SAAAgC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8d4275c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n\r\n    render() { \r\n\r\n        var headerStyle = {\r\n            textAlign: 'center',\r\n            backgroundColor: '#9b4dca',\r\n          }\r\n\r\n        return (<header className=\"App-header\" style={headerStyle}><h1 style={{color:\"white\"}}>Reverse 1 Rep Max</h1></header>);\r\n    }\r\n}\r\n \r\nexport default Header;","import React, {Component} from 'react';\r\n\r\n\r\nclass CalculatorView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.props.state;\r\n    }\r\n\r\n    render() {\r\n\r\n    var inputStyle = {\r\n        position: 'sticky',\r\n        width: '50%',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        height: '10rem',\r\n        marginBottom: '25rem', \r\n        marginTop: '5rem',\r\n        paddingBottom: '5rem'\r\n        \r\n    }\r\n\r\n    return ( \r\n        <div>\r\n                { this.props.visible\r\n                ?<div className=\"container\" style={inputStyle}>\r\n\r\n                <form>\r\n                    <fieldset>\r\n                        <label for=\"oneRM\">Enter One Rep Max (Lbs)</label>\r\n                        <input type=\"number\" id=\"oneRM\" min=\"1\" required></input>\r\n                        <p>THEN</p>\r\n                        <label for=\"goalWeight\">Enter Goal Weight</label>\r\n                        <input type=\"number\" id=\"goalWeight\" min=\"1\"></input>\r\n                        <p>OR</p>\r\n                        <label for=\"goalReps\">Enter Goal Reps</label>\r\n                        <input type=\"number\" id=\"goalReps\" min=\"1\"></input>\r\n                    </fieldset>\r\n                </form>\r\n\r\n                <button class=\"button-large\" onClick={this.props.calculate}>Calculate</button>\r\n\r\n                </div>\r\n                : <div></div>\r\n                }\r\n            \r\n        </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default CalculatorView;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n//import db from './DataBase'\r\n\r\nclass DataView extends Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = this.props.state;\r\n}\r\n\r\n\r\n    render() {\r\n\r\n    var tableStyle = {\r\n        width: '90%',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        margin: '1rem'\r\n    }\r\n\r\n    var clearbuttonStyle ={\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        marginBottom: '5rem'\r\n    }\r\n\r\n    return ( \r\n    <div>\r\n        {\r\n            this.props.visible\r\n            ?\r\n            <div>\r\n\r\n                <h2 style={{textAlign: \"center\"}}> Data </h2>\r\n\r\n                <table style={tableStyle}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>One Rep Max Used</th>\r\n                            <th>Reps</th>\r\n                            <th>Weight</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                         {this.props.calcs.map((calc) => (\r\n                \r\n                            <tr key={calc.id}>\r\n                                <td>{calc.datetime} </td>\r\n                                <td>{calc.onerepmax} </td>\r\n                                <td>{calc.calculatedreps}{calc.goalreps}</td>\r\n                                <td>{calc.calculatedweight}{calc.goalweight}</td>\r\n                                <td id={calc.id} onClick={this.props.delete}><FontAwesomeIcon icon={faTrash}/></td>\r\n                            </tr>\r\n                            ))}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"container\" style={clearbuttonStyle}>\r\n                <button class=\"button-large\" onClick={this.props.clear}>Clear Data</button>\r\n                </div>\r\n            </div>\r\n            :<div></div>\r\n        }\r\n    </div>\r\n     );\r\n}\r\n}\r\n\r\n \r\nexport default DataView;","import React, {Component} from 'react';\r\n\r\nclass BottomNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.props.state;\r\n    }\r\n\r\n\r\n    render() { \r\n\r\n        var containerStyle = {\r\n            margin: \"0\",\r\n            marginTop: \"5px\",\r\n            padding: \"0\",\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            bottom: \"0\",\r\n            backgroundColor: \"#9b4dca\",\r\n        }\r\n    \r\n        var ulStyle = {\r\n            listStyleType: \"none\",\r\n            width: \"auto\",\r\n            textAlign: 'center',\r\n            height: \"100%\",\r\n        }\r\n    \r\n        var li1Style = {\r\n            display: \"inline\",\r\n            width: \"50%\",\r\n            height: \"100%\",\r\n            borderRight: \"1px solid #fff\",\r\n            textAlign: 'center', \r\n        }\r\n    \r\n        var li2Style = {\r\n            display: \"inline\",\r\n            width: \"50%\",\r\n            borderLeft: \"1px solid #fff\",\r\n            height: \"100%\",\r\n            textAlign: 'center',\r\n        }\r\n    \r\n        var aStyle = {\r\n            color: \"#fff\",\r\n            fontWeight: 'bold',\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            paddingLeft: \"10%\",\r\n            paddingRight: \"10%\",\r\n            paddingBottom: \"10%\",\r\n        }\r\n\r\n        return ( \r\n            <div className=\"container\" style={containerStyle}>\r\n                <ul style={ulStyle}>\r\n                    <li style={li1Style}><a style={aStyle} href=\"#calculator\" id=\"calculator\" onClick={this.props.handleClick}>CALCULATOR</a></li>\r\n                    <li style={li2Style}><a style={aStyle} href=\"#data\" id=\"data\" onClick={this.props.handleClick}>MY DATA</a></li>\r\n                </ul>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default BottomNav;","import React, { Component } from 'react';\r\nimport Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\n\r\n\r\nclass CalculationModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state=this.props.state\r\n    }\r\n\r\n\r\n    render() { \r\n\r\n        var divStyle = {\r\n            textAlign: 'center',\r\n            justifyContent: 'center',\r\n            \r\n        }\r\n\r\n        var buttonStyle = {\r\n            marginRight: '3%'\r\n        }\r\n\r\n        return (  \r\n        <div>\r\n            {\r\n                this.props.visible\r\n                ? <div>\r\n                    <Rodal \r\n                        visible={this.props.visible} \r\n                        onClose={this.props.hide} \r\n                        animation={this.props.animation}\r\n                        width={this.props.width}\r\n                        height={this.props.height}\r\n                        measure={this.props.measure}\r\n                    >\r\n                    <div style={divStyle}>\r\n                        <h2>Results</h2><hr></hr>\r\n                        <h3 id=\"modalResult\">{this.props.result}</h3><hr></hr>\r\n                            <button onClick={this.props.hide} style={buttonStyle}>Close</button>\r\n                            <button onClick={this.props.save}>Save</button>\r\n                    </div>\r\n                    </Rodal>\r\n                </div>\r\n                : <div></div>\r\n            }\r\n        </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default CalculationModal;","import Dexie from 'dexie';\r\n\r\nconst db = new Dexie('CalculationDB');\r\ndb.version(1).stores(\r\n    { calculation: '++id, datetime, onerepmax, goalreps, goalweight, calculatedreps, calculatedweight' }\r\n);\r\n\r\nexport default db;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport CalculatorView from './components/CalculatorView';\nimport DataView from './components/DataView';\nimport BottomNav from './components/BottomNav'\nimport CalculationModal from './components/CalculationModal';\nimport db from './components/DataBase'\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      calculatorViewVisible: true,\n      dataViewVisible: false,\n      modalVisible: false,\n      result: '',\n      calcs: [] ,//Add state for dexie.js\n      animation: \"flip\", //Add state for Rodal\n      width: 30,\n      height: 30,\n      measure:'rem'\n     }\n     this.handleClick = this.handleClick.bind(this)\n     this.calculate = this.calculate.bind(this)\n     this.show = this.show.bind(this)\n     this.hide = this.hide.bind(this)\n     this.save = this.save.bind(this)\n     this.delete = this.delete.bind(this)\n     this.clear = this.clear.bind(this)\n  }\n\n  componentDidMount() {\n    db.table('calculation')\n      .toArray()\n      .then((calcs) => {\n        this.setState({ calcs });\n      });\n  }\n\n  handleClick(id) {\n    switch (id.target.id) {\n      case \"calculator\":\n        this.setState(\n          {\n            calculatorViewVisible: true,\n            dataViewVisible: false,\n            modalVisible: false\n          }\n        )\n        break;\n      case \"data\":\n        this.setState(\n          {\n            calculatorViewVisible: false,\n            dataViewVisible: true,\n            modalVisible: false\n          }\n        )\n        break;\n      default:      \n      this.setState(\n        {\n          calculatorViewVisible: true,\n          dataViewVisible: false,\n          modalVisible: false\n        }\n      )\n      \n    }\n  }\n\n  calculate (){\n\n    var max=document.getElementById(\"oneRM\")\n    var weight=document.getElementById(\"goalWeight\")\n    var reps=document.getElementById(\"goalReps\")\n\n    if (max.value>0 && weight.value>0 && !reps.value>0) {\n        var maxreps = Math.round(((max.value-weight.value)/3)+1);\n        this.setState ({result: maxreps, modalVisible: true});\n    }\n    else if (max.value>0 && reps.value>0 && !weight.value>0) {\n        var maxweight = Math.round(max.value-(max.value*((reps.value-1)*.03)))\n        this.setState ({result: maxweight, modalVisible: true})\n    }\n    else {\n        var warning = \"Error. Just do 'fahves'\"\n        this.setState ({result: warning, modalVisible: true})\n    };\n\n  }\n\n  show() {\n    this.setState({ visible: true });\n  }\n\n  hide() {\n    this.setState({ modalVisible: false });\n  }\n\n  save(){\n    var max=document.getElementById(\"oneRM\")\n    var weight=document.getElementById(\"goalWeight\")\n    var reps=document.getElementById(\"goalReps\")\n    var timeStamp = new Date()\n    var niceTimeStamp = timeStamp.toDateString()\n\n    if (max.value>0 && weight.value>0 && !reps.value>0) {\n     db.calculation.add({\n        datetime: niceTimeStamp, \n        onerepmax: max.value, \n        goalreps: reps.value, \n        goalweight: weight.value, \n        calculatedreps: this.state.result, \n        calculatedweight: null\n      });\n      this.componentDidMount();\n\n      this.setState({dataViewVisible: true, calculatorViewVisible: false, modalVisible: false})\n    }\n    else if (max.value>0 && reps.value>0 && !weight.value>0) {\n      db.calculation.add({\n        datetime: niceTimeStamp, \n        onerepmax: max.value, \n        goalreps: reps.value, \n        goalweight: weight.value, \n        calculatedreps: null, \n        calculatedweight: this.state.result\n      });\n      this.componentDidMount();\n      this.setState({dataViewVisible: true, calculatorViewVisible: false, modalVisible: false});\n    }\n    else {this.setState({dataViewVisible: false, calculatorViewVisible: true, modalVisible: false});}\n}\n\n  delete ({currentTarget}) {\n    var num = parseInt(currentTarget.id)\n    db.calculation.delete(num);\n    this.setState({dataViewVisible: true, calculatorViewVisible: false, modalVisible: false});\n    this.componentDidMount();\n  }\n\n  clear(){\n    db.calculation.clear();\n    this.setState({dataViewVisible: true, calculatorViewVisible: false, modalVisible: false});\n    this.componentDidMount();\n  }\n\n  \n  render() {\n  return (\n\n    <div className=\"App\">\n  \n      <Header/>\n\n      <CalculatorView \n        visible={this.state.calculatorViewVisible} \n        calculate={this.calculate} \n        show={this.show}/>\n\n      <DataView \n        visible={this.state.dataViewVisible}\n        calcs={this.state.calcs}\n        delete={this.delete}\n        clear={this.clear}/>\n\n      <CalculationModal \n        visible={this.state.modalVisible} \n        result={this.state.result} \n        animation={this.state.animation}\n        width={this.state.width} \n        height={this.state.height} \n        measure={this.state.measure}\n        hide={this.hide} \n        save={this.save}/>\n\n      <BottomNav \n        handleClick={this.handleClick}/>\n\n    </div>\n  );\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}